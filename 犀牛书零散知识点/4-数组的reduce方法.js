/**
 * 数组的 reduce 方法是最重要的一个方法之一，之前我也是一直都没有真正的掌握它，所以这次选择完整了解一下它
 *  这个方法非常的适用于做求和等等一系列连锁的操作
 *
 *  reduce方法接受两个参数，分别是 迭代函数和初始值（可有可无）
 *
 *      迭代函数和 map forEach... 等等的都有区别
 *          这个函数的第一个参数是 上一次计算结果的返回值，第二个参数是这回所迭代的值，第三个是这回迭代的所以 第四个是原数组
 *
 *          这个函数的第二个参数是 初始值， 在传递的情况下 第一个函数的第一个参数就是这个值
 *              如果没有传递这个参数的话，迭代函数的第一个参数就是数组的第一个值
 *
 *          也就是说，有传递默认值的情况下会比没有传递默认值的情况多进行一次迭代，
 *              因为会先用默认值和数组的第一个值进行一次运算，
 *              如果没有传递默认值 则第一次计算就是直接是  数组的第一个值和第二个值进行计算 这个就是细节
 */

let arr = [1, 2, 3, 4, 5];
arr.reduce((a, b) => {
  console.log('a:', a, 'b:', b);
  return a + b;
}, 0);
/*
    循环依次是 0+1 1+2 3+3 6+4
*/

arr.reduce((a, b) => {
  console.log('a:', a, 'b:', b);
}, 6);
/*
    循环依次是 6+1 7+2 9+3  
*/

let res1 = arr.reduce((a, b) => a + b);
let res2 = arr.reduce((a, b) => a + b, 1);

console.log('res1', res1);
console.log('res2', res2);
